plugins {
    id 'java'
    id 'maven-publish'
    id("io.papermc.paperweight.userdev") version "1.5.10"
    id("xyz.jpenilla.run-paper") version "2.2.2"
}

apply plugin: 'java'
apply plugin: 'maven-publish'
group = 'me.dueris'
version = '1.0'

java {
  toolchain.languageVersion.set(JavaLanguageVersion.of(17))
}


repositories {
    mavenCentral()
    maven {
        name = "papermc-repo"
        url = "https://repo.papermc.io/repository/maven-public/"
    }
    maven {
        name = "sonatype"
        url = "https://s01.oss.sonatype.org/content/groups/public/"
    }
    maven {
        url = uri("https://repo.spongepowered.org/maven/")
    }
    maven {
        url = uri("https://files.minecraftforge.net/maven/")
    }
    maven {
        url = uri("https://maven.fabricmc.net/")
    }
}

dependencies {
    paperweight.paperDevBundle("1.20.4-R0.1-SNAPSHOT", "io.github.dueris")
    implementation("io.github.dueris:dev-bundle:1.20.4-R0.1-SNAPSHOT")
    implementation("org.spongepowered:configurate-hocon:4.2.0-SNAPSHOT")
    implementation("org.spongepowered:configurate-gson:4.2.0-SNAPSHOT")
    implementation("net.fabricmc:access-widener:2.1.0")
    implementation("net.fabricmc:sponge-mixin:0.12.4+mixin.0.8.5")
}

tasks {
    assemble {
        dependsOn(reobfJar)
    }

    compileJava {
        // Set the release flag. This configures what version bytecode the compiler will emit, as well as what JDK APIs are usable.
        // See https://openjdk.java.net/jeps/247 for more information.
        options.release.set(17)
    }
    /*
    reobfJar {
        // This is an example of how you might change the output location for reobfJar. It's recommended not to do this
        // for a variety of reasons, however it's asked frequently enough that an example of how to do it is included here.
        outputJar.set(layout.buildDirectory.file("libs/PaperweightTestPlugin-${project.version}.jar"))
    }
    */
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}
